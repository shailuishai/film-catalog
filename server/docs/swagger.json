{
    "swagger": "2.0",
    "info": {
        "description": "API for potatorate site",
        "title": "Film-catalog API",
        "contact": {
            "name": "Evdokimov Igor",
            "url": "https://t.me/epelptic"
        },
        "version": "1.0.0"
    },
    "basePath": "/v1",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Create access and refresh token and return them to the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User SignIn",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or validation error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid Password or Email",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "403": {
                        "description": "User email is not confirmed",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Registers a new user with the provided email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User SignUp",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict - User with this email or login already exists",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.UserSignInRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "user1"
                },
                "password": {
                    "type": "string",
                    "example": "SuperPassword123"
                }
            }
        },
        "controller.UserSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "user1"
                },
                "password": {
                    "type": "string",
                    "example": "SuperPassword123"
                }
            }
        },
        "response.Response": {
            "description": "Structure for a standard API response",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string",
                    "example": "any error"
                },
                "status": {
                    "type": "string",
                    "example": "success/error"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}